version: '3'

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_traefik: {}
  cosmetic_django_media: {}
  cosmetic_front: {}
  cosmetic_dashboard: {}
services:
  cosmetic-api: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile

    image: cosmeticpro_production_django
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    volumes:
      - cosmetic_django_media:/app/codehelp/media
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: cosmeticpro_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
      - production_postgres_data_backups:/backups
    env_file:
      - ./.envs/.production/.postgres

  # traefik:
  #   build:
  #     context: .
  #     dockerfile: ./compose/production/traefik/Dockerfile
  #   image: cosmeticpro_production_traefik
  #   depends_on:
  #     - django
  #   volumes:
  #     - production_traefik:/etc/traefik/acme
  #   ports:
  #     - '0.0.0.0:80:80'
  #     - '0.0.0.0:443:443'
  #     - '0.0.0.0:5555:5555'

  redis:
    image: redis:6

  celeryworker:
    <<: *django
    image: cosmeticpro_production_celeryworker
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: cosmeticpro_production_celerybeat
    command: /start-celerybeat

  flower:
    <<: *django
    image: cosmeticpro_production_flower
    command: /start-flower

  # awscli:
  #   build:
  #     context: .
  #     dockerfile: ./compose/production/aws/Dockerfile
  #   env_file:
  #     - ./.envs/.production/.django
  #   volumes:
  #     - production_postgres_data_backups:/backups:z

  cosmetic-front:
    build:
        context: ./front-next
        dockerfile: ./docker/production/Dockerfile
    container_name: cosmetic-front
    # restart: unless-stopped
    # volumes:
    #     - ./front-next:/app
    #     - cosmetic_front:/app/node_modules
    # ports:
    #     - "3000:3000"
    command: pnpm start
    user: root

  cosmetic-dashboard:
    build:
        context: ./dashboard-next
        dockerfile: ./docker/production/Dockerfile
    container_name: cosmetic-dashboard
    # restart: unless-stopped
    # volumes:
    #     - ./dashboard-next:/app
    #     - cosmetic_dashboard:/app/node_modules
    # ports:
    #     - "4000:4000"
    command: pnpm start
    user: root

  nginx:
    build:
      context: ./compose/production/nginx
      dockerfile: Dockerfile
    image: cosmetic_local_nginx
    depends_on:
      - cosmetic-api
    volumes:
      - cosmetic_django_media:/usr/share/nginx/media:ro
    ports:
        - "3000:3000"
        - "4000:4000"